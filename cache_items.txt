  cache-misses                                       [Hardware event]
  cache-references                                   [Hardware event]
  L1-dcache-loads                                    [Hardware cache event]
  L1-dcache-stores                                   [Hardware cache event]
  L1-icache-load-misses                              [Hardware cache event]
  LLC-load-misses                                    [Hardware cache event]
  LLC-loads                                          [Hardware cache event]
  LLC-store-misses                                   [Hardware cache event]
  LLC-stores                                         [Hardware cache event]
  branch-load-misses                                 [Hardware cache event]
  branch-loads                                       [Hardware cache event]
  cpu_atom/L1-icache-loads/                          [Hardware cache event]
  cpu_core/L1-dcache-load-misses/                    [Hardware cache event]
  cpu_core/node-load-misses/                         [Hardware cache event]
  cpu_core/node-loads/                               [Hardware cache event]
  dTLB-load-misses                                   [Hardware cache event]
  dTLB-loads                                         [Hardware cache event]
  dTLB-store-misses                                  [Hardware cache event]
  dTLB-stores                                        [Hardware cache event]
  iTLB-load-misses                                   [Hardware cache event]
  cache-misses OR cpu_atom/cache-misses/             [Kernel PMU event]
  cache-misses OR cpu_core/cache-misses/             [Kernel PMU event]
  cache-references OR cpu_atom/cache-references/     [Kernel PMU event]
  cache-references OR cpu_core/cache-references/     [Kernel PMU event]
cache:
       [Counts the number of cache lines replaced in L1 data cache. Unit:
       [L2 cache lines filling L2. Unit: cpu_core]
       [Cache lines that have been L2 hardware prefetched but not used by
       [All accesses to L2 cache[This event is alias to L2_RQSTS.REFERENCES].
       [Read requests with true-miss in L2 cache.[This event is alias to
       [Demand Data Read access L2 cache. Unit: cpu_core]
       [Demand requests that miss L2 cache. Unit: cpu_core]
       [RFO requests to L2 cache. Unit: cpu_core]
       [L2 cache hits when fetching instructions, code reads. Unit: cpu_core]
       [L2 cache misses when fetching instructions. Unit: cpu_core]
       [Demand Data Read requests that hit L2 cache. Unit: cpu_core]
       [Demand Data Read miss L2 cache. Unit: cpu_core]
       [Read requests with true-miss in L2 cache.[This event is alias to
       [All accesses to L2 cache[This event is alias to L2_REQUEST.ALL]. Unit:
       [RFO requests that hit L2 cache. Unit: cpu_core]
       [RFO requests that miss L2 cache. Unit: cpu_core]
       [SW prefetch requests that hit L2 cache. Unit: cpu_core]
       [SW prefetch requests that miss L2 cache. Unit: cpu_core]
  longest_lat_cache.miss                            
       [Counts the number of cacheable memory requests that miss in the LLC.
  longest_lat_cache.miss                            
       [Core-originated cacheable requests that missed L3 (Except hardware
  longest_lat_cache.reference                       
       [Counts the number of cacheable memory requests that access the LLC.
  longest_lat_cache.reference                       
       [Core-originated cacheable requests that refer to L3 (Except hardware
        cache or TLB miss which hit in the L2, LLC, DRAM or MMIO (Non-DRAM).
        cache or TLB miss which hit in DRAM or MMIO (Non-DRAM). Unit: cpu_atom]
        cache or TLB miss which hit in the L2 cache. Unit: cpu_atom]
        cache or TLB miss which hit in the LLC or other core with HITE/F/M.
        which hit in the L2 cache. Unit: cpu_atom]
       [Retired load instructions that split across a cacheline boundary
       [Retired store instructions that split across a cacheline boundary
       [Completed demand load uops that miss the L1 d-cache. Unit: cpu_core]
        snoop hits in on-pkg core cache Supports address when precise (Precise
        cross-core snoop missed in on-pkg core cache Supports address when
        snoop hits in on-pkg core cache Supports address when precise (Precise
       [Retired instructions with at least 1 uncacheable load or lock Supports
        the FB(fill buffer), because a preceding miss to the same cacheline
       [Retired load instructions with L1 cache hits as data sources Supports
       [Retired load instructions missed L1 cache as data sources Supports
       [Retired load instructions with L2 cache hits as data sources Supports
       [Retired load instructions missed L2 cache as data sources Supports
       [Retired load instructions with L3 cache hits as data sources Supports
       [Retired load instructions missed L3 cache as data sources Supports
       [Counts the number of load uops retired that hit in the L2 cache
       [Counts the number of load uops retired that hit in the L3 cache
       [Counts demand data reads that were supplied by the L3 cache. Unit:
       [Counts demand data reads that were supplied by the L3 cache where a
       [Counts demand data reads that were supplied by the L3 cache where a
       [Counts demand data reads that were supplied by the L3 cache where a
        caches, data forwarding is required as the data is modified. Unit:
        exclusive ownership (PREFETCHW) that were supplied by the L3 cache.
        exclusive ownership (PREFETCHW) that were supplied by the L3 cache
        snoop hit in another cores caches, data forwarding is required as the
  topdown_fe_bound.icache                           
        by the frontend due to instruction cache misses. Unit: cpu_atom]
       [Retired Instructions who experienced Instruction L1 Cache true miss
       [Retired Instructions who experienced Instruction L2 Cache true miss
  icache.accesses                                   
       [Counts the number of requests to the instruction cache for one or more
        bytes of a cache line. Unit: cpu_atom]
  icache.misses                                     
       [Counts the number of instruction cache misses. Unit: cpu_atom]
  icache_data.stalls                                
       [Cycles where a code fetch is stalled due to L1 instruction cache miss.
  icache_tag.stalls                                 
       [Cycles where a code fetch is stalled due to L1 instruction cache tag
       [Execution stalls while L3 cache miss demand load is outstanding. Unit:
       [Cycles while L1 cache miss demand load is outstanding. Unit: cpu_core]
       [Execution stalls while L1 cache miss demand load is outstanding. Unit:
       [Counts demand data reads that were not supplied by the L3 cache. Unit:
       [Counts demand data reads that were not supplied by the L3 cache. Unit:
       [Counts demand data reads that were not supplied by the L3 cache. Unit:
        cache. Unit: cpu_atom]
        by the L3 cache. Unit: cpu_core]
        cache. Unit: cpu_atom]
       [Counts modified writebacks from L1 cache and L2 cache that have any
       [Cycles while L1 cache miss demand load is outstanding. Unit: cpu_core]
       [Cycles while L2 cache miss demand load is outstanding. Unit: cpu_core]
       [Execution stalls while L1 cache miss demand load is outstanding. Unit:
       [Execution stalls while L2 cache miss demand load is outstanding. Unit:
        BTCLEARs, ITLB misses, and ICache misses. Unit: cpu_atom]
        incrementing this counter. However, same cache line write requests
        incrementing this counter. However, same cache line write requests
  itlb_misses.pde_cache_miss                        
        the PDE (Page Directory Entry) cache. Unit: cpu_atom]
  ext4:ext4_es_cache_extent                          [Tracepoint event]
  filemap:mm_filemap_add_to_page_cache               [Tracepoint event]
  filemap:mm_filemap_delete_from_page_cache          [Tracepoint event]
  kmem:kmem_cache_alloc                              [Tracepoint event]
  kmem:kmem_cache_free                               [Tracepoint event]
  regmap:regcache_drop_region                        [Tracepoint event]
  regmap:regcache_sync                               [Tracepoint event]
  regmap:regmap_cache_bypass                         [Tracepoint event]
  regmap:regmap_cache_only                           [Tracepoint event]
  regmap:regmap_reg_read_cache                       [Tracepoint event]
  xfs:xfs_buf_get_uncached                           [Tracepoint event]
  xfs:xfs_pagecache_inval                            [Tracepoint event]
       [L2 cache true misses per kilo instruction for retired demand loads. Unit: cpu_core ]
       [Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses). Unit: cpu_core ]
  tma_icache_misses
       [This metric represents fraction of cycles the CPU was stalled due to instruction cache misses. Unit: cpu_core ]
CacheMisses:
       [L1 cache true misses per kilo instruction for retired demand loads. Unit: cpu_core ]
       [L1 cache true misses per kilo instruction for all demand loads (including speculative). Unit: cpu_core ]
       [L2 cache hits per kilo instruction for all request types (including speculative). Unit: cpu_core ]
       [L2 cache hits per kilo instruction for all demand loads  (including speculative). Unit: cpu_core ]
       [L2 cache true misses per kilo instruction for retired demand loads. Unit: cpu_core ]
       [L2 cache ([RKL+] true) misses per kilo instruction for all request types (including speculative). Unit: cpu_core ]
       [L2 cache ([RKL+] true) misses per kilo instruction for all demand loads  (including speculative). Unit: cpu_core ]
       [L3 cache true misses per kilo instruction for retired demand loads. Unit: cpu_core ]
       [This metric estimates how often the CPU was stalled without loads missing the L1 data cache. Unit: cpu_core ]
       [This metric estimates how often the CPU was stalled due to L2 cache accesses by loads. Unit: cpu_core ]
       [This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core. Unit: cpu_core ]
       [Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop Cache). Unit: cpu_core ]
       [This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline. Unit: cpu_core ]
       [Total penalty related to DSB (uop cache) misses - subset of the Instruction_Fetch_BW Bottleneck. Unit: cpu_core ]
       [Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses). Unit: cpu_core ]
       [Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop Cache). Unit: cpu_core ]
       [Total penalty related to DSB (uop cache) misses - subset of the Instruction_Fetch_BW Bottleneck. Unit: cpu_core ]
       [Fraction of Uops delivered by the LSD (Loop Stream Detector; aka Loop Cache). Unit: cpu_core ]
       [Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop Cache). Unit: cpu_core ]
       [This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline. Unit: cpu_core ]
  tma_icache_misses
       [This metric represents fraction of cycles the CPU was stalled due to instruction cache misses. Unit: cpu_core ]
       [Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses). Unit: cpu_core ]
       [Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses). Unit: cpu_core ]
  tma_icache_misses
       [This metric represents fraction of cycles the CPU was stalled due to instruction cache misses. Unit: cpu_core ]
       [Fraction of Uops delivered by the LSD (Loop Stream Detector; aka Loop Cache). Unit: cpu_core ]
  L1D_Cache_Fill_BW
       [Average per-core data fill bandwidth to the L1 data cache [GB / sec]. Unit: cpu_core ]
  L1D_Cache_Fill_BW_1T
       [Average per-thread data fill bandwidth to the L1 data cache [GB / sec]. Unit: cpu_core ]
       [L1 cache true misses per kilo instruction for retired demand loads. Unit: cpu_core ]
       [L1 cache true misses per kilo instruction for all demand loads (including speculative). Unit: cpu_core ]
       [L2 cache hits per kilo instruction for all request types (including speculative). Unit: cpu_core ]
       [L2 cache hits per kilo instruction for all demand loads  (including speculative). Unit: cpu_core ]
       [L2 cache true misses per kilo instruction for retired demand loads. Unit: cpu_core ]
       [L2 cache ([RKL+] true) misses per kilo instruction for all request types (including speculative). Unit: cpu_core ]
       [L2 cache ([RKL+] true) misses per kilo instruction for all demand loads  (including speculative). Unit: cpu_core ]
  L2_Cache_Fill_BW
       [Average per-core data fill bandwidth to the L2 cache [GB / sec]. Unit: cpu_core ]
  L2_Cache_Fill_BW_1T
       [Average per-thread data fill bandwidth to the L2 cache [GB / sec]. Unit: cpu_core ]
       [L3 cache true misses per kilo instruction for retired demand loads. Unit: cpu_core ]
  L3_Cache_Access_BW
       [Average per-core data access bandwidth to the L3 cache [GB / sec]. Unit: cpu_core ]
  L3_Cache_Access_BW_1T
       [Average per-thread data access bandwidth to the L3 cache [GB / sec]. Unit: cpu_core ]
  L3_Cache_Fill_BW
       [Average per-core data fill bandwidth to the L3 cache [GB / sec]. Unit: cpu_core ]
  L3_Cache_Fill_BW_1T
       [Average per-thread data fill bandwidth to the L3 cache [GB / sec]. Unit: cpu_core ]
       [Actual Average Latency for L1 data-cache miss demand load operations (in core cycles). Unit: cpu_core ]
       [Total pipeline cost of Memory Latency related bottlenecks (external memory and off-core caches). Unit: cpu_core ]
  L1D_Cache_Fill_BW
       [Average per-core data fill bandwidth to the L1 data cache [GB / sec]. Unit: cpu_core ]
  L1D_Cache_Fill_BW_1T
       [Average per-thread data fill bandwidth to the L1 data cache [GB / sec]. Unit: cpu_core ]
  L2_Cache_Fill_BW
       [Average per-core data fill bandwidth to the L2 cache [GB / sec]. Unit: cpu_core ]
  L2_Cache_Fill_BW_1T
       [Average per-thread data fill bandwidth to the L2 cache [GB / sec]. Unit: cpu_core ]
  L3_Cache_Access_BW
       [Average per-core data access bandwidth to the L3 cache [GB / sec]. Unit: cpu_core ]
  L3_Cache_Access_BW_1T
       [Average per-thread data access bandwidth to the L3 cache [GB / sec]. Unit: cpu_core ]
  L3_Cache_Fill_BW
       [Average per-core data fill bandwidth to the L3 cache [GB / sec]. Unit: cpu_core ]
  L3_Cache_Fill_BW_1T
       [Average per-thread data fill bandwidth to the L3 cache [GB / sec]. Unit: cpu_core ]
       [Actual Average Latency for L1 data-cache miss demand load operations (in core cycles). Unit: cpu_core ]
       [This metric estimates how often the CPU was stalled without loads missing the L1 data cache. Unit: cpu_core ]
       [This metric estimates how often the CPU was stalled due to L2 cache accesses by loads. Unit: cpu_core ]
       [This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core. Unit: cpu_core ]
       [Actual Average Latency for L1 data-cache miss demand load operations (in core cycles). Unit: cpu_core ]
       [Total pipeline cost of Memory Latency related bottlenecks (external memory and off-core caches). Unit: cpu_core ]
       [This metric represents fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited). Unit: cpu_core ]
       [Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses). Unit: cpu_core ]
       [L2 cache ([RKL+] true) misses per kilo instruction for all request types (including speculative). Unit: cpu_core ]
  L3_Cache_Access_BW
       [Average per-core data access bandwidth to the L3 cache [GB / sec]. Unit: cpu_core ]
  L3_Cache_Access_BW_1T
       [Average per-thread data access bandwidth to the L3 cache [GB / sec]. Unit: cpu_core ]
       [Total pipeline cost of Memory Latency related bottlenecks (external memory and off-core caches). Unit: cpu_core ]
       [This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations. Unit: cpu_core ]
       [This metric estimates how often the CPU was stalled without loads missing the L1 data cache. Unit: cpu_core ]
       [This metric estimates how often the CPU was stalled due to L2 cache accesses by loads. Unit: cpu_core ]
       [This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core. Unit: cpu_core ]
       [This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline. Unit: cpu_core ]
  tma_icache
       [Counts the number of issue slots  that were not delivered by the frontend due to instruction cache misses. Unit: cpu_atom ]
  tma_icache_misses
       [This metric represents fraction of cycles the CPU was stalled due to instruction cache misses. Unit: cpu_core ]
       [This metric estimates how often the CPU was stalled without loads missing the L1 data cache. Unit: cpu_core ]
       [Counts the number of cycles a core is stalled due to a demand load which hit in the L2 Cache. Unit: cpu_atom ]
       [This metric estimates how often the CPU was stalled due to L2 cache accesses by loads. Unit: cpu_core ]
       [Counts the number of cycles a core is stalled due to a demand load which hit in the Last Level Cache (LLC) or other core with HITE/F/M. Unit: cpu_atom ]
       [This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core. Unit: cpu_core ]
       [This metric represents fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited). Unit: cpu_core ]
       [This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations. Unit: cpu_core ]
       [This metric estimates fraction of cycles handling memory load split accesses - load that cross 64-byte cache line boundary. Unit: cpu_core ]
       [This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline. Unit: cpu_core ]
  tma_icache_misses
       [This metric represents fraction of cycles the CPU was stalled due to instruction cache misses. Unit: cpu_core ]
  tma_icache
       [Counts the number of issue slots  that were not delivered by the frontend due to instruction cache misses. Unit: cpu_atom ]
       [This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations. Unit: cpu_core ]
       [This metric estimates fraction of cycles handling memory load split accesses - load that cross 64-byte cache line boundary. Unit: cpu_core ]
       [This metric represents fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited). Unit: cpu_core ]
       [Counts the number of cycles a core is stalled due to a demand load which hit in the L2 Cache. Unit: cpu_atom ]
       [Counts the number of cycles a core is stalled due to a demand load which hit in the Last Level Cache (LLC) or other core with HITE/F/M. Unit: cpu_atom ]
       [This metric estimates how often the CPU was stalled without loads missing the L1 data cache. Unit: cpu_core ]
       [This metric estimates how often the CPU was stalled due to L2 cache accesses by loads. Unit: cpu_core ]
       [This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core. Unit: cpu_core ]
